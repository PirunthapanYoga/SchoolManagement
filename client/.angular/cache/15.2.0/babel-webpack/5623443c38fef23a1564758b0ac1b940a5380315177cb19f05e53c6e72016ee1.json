{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet RegClassRoomComponent = class RegClassRoomComponent {\n  constructor(http) {\n    this.http = http;\n    this.baseurl = \"https://localhost:7217/api/\";\n    this.divitions = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"];\n    this.grades = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n    this.classRoom = {};\n  }\n  ngOnInit() {\n    this.getClassroom();\n  }\n  getClassroom() {\n    this.http.get(this.baseurl + 'classRoom/').subscribe({\n      next: response => {\n        this.classRooms = response;\n      },\n      error: () => console.log(console.error()),\n      complete: () => console.log('Requse has Been Completed')\n    });\n  }\n  register() {\n    console.log(this.grade);\n    console.log(this.divition);\n    this.calssRoomName = \"Grade\" + \" \" + this.grade + \" \" + this.divition;\n    if (this.grade == null || this.divition == null) {\n      this.validate = \"Fields with * are Required\";\n    }\n    console.log(this.calssRoomName);\n    this.validateName();\n    // this.http.post<classRoom>(this.baseurl + \"classRoom/register/\" , this.classRoom).subscribe({})\n  }\n\n  validateName() {\n    this.classRooms.forEach(element => {\n      if (this.calssRoomName == element.name) {\n        this.validate = \"Class room '\" + this.calssRoomName + \"' already registred. Check again and register\";\n      }\n    });\n  }\n  setGrade(grade) {\n    this.grade = grade;\n  }\n  setDivition(divition) {\n    this.divition = divition;\n  }\n};\nRegClassRoomComponent = __decorate([Component({\n  selector: 'app-reg-class-room',\n  templateUrl: './reg-class-room.component.html',\n  styleUrls: ['./reg-class-room.component.css']\n})], RegClassRoomComponent);\nexport { RegClassRoomComponent };","map":{"version":3,"mappings":";AACA,SAASA,SAAS,QAAgB,eAAe;AAQ1C,IAAMC,qBAAqB,GAA3B,MAAMA,qBAAqB;EAchCC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAbxB,YAAO,GAAG,6BAA6B;IAEvC,cAAS,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAG,GAAG,EAAE,GAAG,EAAE,GAAG,EAC9D,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IAC1E,WAAM,GAAG,CAAC,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,CAAC;IAEhE,cAAS,GAAqB,EAAE;EAOM;EAEtCC,QAAQ;IACN,IAAI,CAACC,YAAY,EAAE;EACrB;EAEAA,YAAY;IACV,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,IAAI,CAACC,OAAO,GAAG,YAAY,CAAC,CAACC,SAAS,CAAC;MACnDC,IAAI,EAAGC,QAAQ,IAAG;QAChB,IAAI,CAACC,UAAU,GAAGD,QAAQ;MAC5B,CAAC;MACDE,KAAK,EAAE,MAAMC,OAAO,CAACC,GAAG,CAACD,OAAO,CAACD,KAAK,EAAE,CAAC;MACzCG,QAAQ,EAAE,MAAMF,OAAO,CAACC,GAAG,CAAC,2BAA2B;KACxD,CAAC;EACJ;EAEAE,QAAQ;IACNH,OAAO,CAACC,GAAG,CAAC,IAAI,CAACG,KAAK,CAAC;IACvBJ,OAAO,CAACC,GAAG,CAAC,IAAI,CAACI,QAAQ,CAAC;IAC1B,IAAI,CAACC,aAAa,GAAG,OAAO,GAAG,GAAG,GAAG,IAAI,CAACF,KAAK,GAAG,GAAG,GAAG,IAAI,CAACC,QAAQ;IACrE,IAAG,IAAI,CAACD,KAAK,IAAE,IAAI,IAAI,IAAI,CAACC,QAAQ,IAAE,IAAI,EAAC;MACvC,IAAI,CAACE,QAAQ,GAAG,4BAA4B;;IAEhDP,OAAO,CAACC,GAAG,CAAC,IAAI,CAACK,aAAa,CAAC;IAC/B,IAAI,CAACE,YAAY,EAAE;IACnB;EACF;;EAEAA,YAAY;IACV,IAAI,CAACV,UAAU,CAACW,OAAO,CAAEC,OAAmB,IAAI;MAC9C,IAAG,IAAI,CAACJ,aAAa,IAAII,OAAO,CAACC,IAAI,EAAC;QACpC,IAAI,CAACJ,QAAQ,GAAG,cAAc,GAAG,IAAI,CAACD,aAAa,GAAG,+CAA+C;;IAEzG,CAAC,CAAC;EACJ;EAEAM,QAAQ,CAACR,KAAc;IACrB,IAAI,CAACA,KAAK,GAACA,KAAK;EAClB;EAEAS,WAAW,CAACR,QAAiB;IAC3B,IAAI,CAACA,QAAQ,GAACA,QAAQ;EACxB;CAED;AA1DYjB,qBAAqB,eALjCD,SAAS,CAAC;EACT2B,QAAQ,EAAE,oBAAoB;EAC9BC,WAAW,EAAE,iCAAiC;EAC9CC,SAAS,EAAE,CAAC,gCAAgC;CAC7C,CAAC,GACW5B,qBAAqB,CA0DjC;SA1DYA,qBAAqB","names":["Component","RegClassRoomComponent","constructor","http","ngOnInit","getClassroom","get","baseurl","subscribe","next","response","classRooms","error","console","log","complete","register","grade","divition","calssRoomName","validate","validateName","forEach","element","name","setGrade","setDivition","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\DotNetProjects\\ClassroomManagemnt\\client\\src\\app\\reg-class-room\\reg-class-room.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { classRoom } from '../_models/entityModels';\n\n@Component({\n  selector: 'app-reg-class-room',\n  templateUrl: './reg-class-room.component.html',\n  styleUrls: ['./reg-class-room.component.css']\n})\nexport class RegClassRoomComponent implements OnInit {\n  baseurl = \"https://localhost:7217/api/\"\n\n  divitions = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\" , \"J\", \"K\", \"L\",\n            \"M\", \"N\", \"O\", \"P\", \"Q\", \"S\" ,\"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"]\n  grades = [1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 , 12 , 13]\n\n  classRoom : classRoom | any = {};\n  classRooms : classRoom[] | any;\n  \n  grade : number | any;\n  divition : string | any;\n  validate : string | any;\n  calssRoomName : string | any;\n  constructor(private http: HttpClient){}\n\n  ngOnInit(): void {\n    this.getClassroom();\n  }\n\n  getClassroom(){\n    this.http.get(this.baseurl + 'classRoom/').subscribe({\n      next : response => {\n        this.classRooms = response;\n      },\n      error: () => console.log(console.error()),\n      complete: () => console.log('Requse has Been Completed')\n    })\n  }\n\n  register(){\n    console.log(this.grade)\n    console.log(this.divition)\n    this.calssRoomName = \"Grade\" + \" \" + this.grade + \" \" + this.divition;\n    if(this.grade==null || this.divition==null){\n        this.validate = \"Fields with * are Required\"\n    }\n    console.log(this.calssRoomName);\n    this.validateName();\n    // this.http.post<classRoom>(this.baseurl + \"classRoom/register/\" , this.classRoom).subscribe({})\n  }\n\n  validateName(){\n    this.classRooms.forEach((element : classRoom) => {\n      if(this.calssRoomName == element.name){\n        this.validate = \"Class room '\" + this.calssRoomName + \"' already registred. Check again and register\"\n      }\n    });\n  }\n\n  setGrade(grade : number){\n    this.grade=grade;\n  }\n\n  setDivition(divition : string){\n    this.divition=divition;\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}