{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/select\";\nimport * as i7 from \"@angular/material/core\";\nfunction RegClassRoomComponent_mat_option_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-option\", 14);\n    i0.ɵɵlistener(\"onSelectionChange\", function RegClassRoomComponent_mat_option_17_Template_mat_option_onSelectionChange_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const num_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.setGrade(num_r3));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const num_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", num_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", num_r3, \" \");\n  }\n}\nfunction RegClassRoomComponent_mat_option_28_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-option\", 14);\n    i0.ɵɵlistener(\"onSelectionChange\", function RegClassRoomComponent_mat_option_28_Template_mat_option_onSelectionChange_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const divition_r6 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.setDivition(divition_r6));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const divition_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", divition_r6);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", divition_r6, \" \");\n  }\n}\nexport class RegClassRoomComponent {\n  constructor(http) {\n    this.http = http;\n    this.baseurl = \"https://localhost:7217/api/\";\n    this.divitions = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"];\n  }\n  ngOnInit() {\n    this.getClassroom();\n  }\n  getClassroom() {\n    this.http.get(this.baseurl + 'classRoom/').subscribe({\n      next: response => {\n        this.classRooms = response;\n      },\n      error: () => console.log(console.error()),\n      complete: () => console.log('Requse has Been Completed')\n    });\n  }\n  register() {\n    this.http.post(this.baseurl + \"classRoom/register/\", this.classRoom).subscribe({});\n  }\n  counter(i) {\n    return new Array(i);\n  }\n  setGrade(grade) {\n    this.grade = grade;\n  }\n  setDivition(divition) {\n    this.divition = divition;\n  }\n}\nRegClassRoomComponent.ɵfac = function RegClassRoomComponent_Factory(t) {\n  return new (t || RegClassRoomComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nRegClassRoomComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegClassRoomComponent,\n  selectors: [[\"app-reg-class-room\"]],\n  decls: 37,\n  vars: 2,\n  consts: [[1, \"container\", 2, \"margin\", \"35px 35px 35px 35px\"], [\"autocomplete\", \"off\", 3, \"ngSubmit\"], [\"registerForm\", \"ngForm\"], [2, \"font-weight\", \"bold\", \"text-align\", \"center\"], [1, \"row\"], [1, \"col-2\"], [2, \"margin-top\", \"10px\"], [1, \"col-10\"], [\"appearance\", \"fill\"], [3, \"value\", \"onSelectionChange\", 4, \"ngFor\", \"ngForOf\"], [1, \"text-center\", 2, \"margin\", \"25px 25px 25px 25px\"], [\"type\", \"Submit\", 1, \"btn\", \"btn-success\", \"me2\", 2, \"margin-right\", \"10px\"], [\"routerLink\", \"/\", 1, \"btn\", \"btn-secondary\", 2, \"margin-left\", \"10px\"], [2, \"color\", \"red\"], [3, \"value\", \"onSelectionChange\"]],\n  template: function RegClassRoomComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 0)(2, \"form\", 1, 2);\n      i0.ɵɵlistener(\"ngSubmit\", function RegClassRoomComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.register();\n      });\n      i0.ɵɵelementStart(4, \"h2\", 3);\n      i0.ɵɵtext(5, \" Register Student\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"hr\");\n      i0.ɵɵelementStart(7, \"div\", 4)(8, \"div\", 5)(9, \"div\", 6);\n      i0.ɵɵtext(10, \" Class Grade * \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"div\", 7)(12, \"div\", 4)(13, \"mat-form-field\", 8)(14, \"mat-label\");\n      i0.ɵɵtext(15, \"Select Grade\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"mat-select\");\n      i0.ɵɵtemplate(17, RegClassRoomComponent_mat_option_17_Template, 2, 2, \"mat-option\", 9);\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(18, \"div\", 4)(19, \"div\", 5)(20, \"div\", 6);\n      i0.ɵɵtext(21, \" Class Divition * \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(22, \"div\", 7)(23, \"div\", 4)(24, \"mat-form-field\", 8)(25, \"mat-label\");\n      i0.ɵɵtext(26, \"Select Class Divition\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"mat-select\");\n      i0.ɵɵtemplate(28, RegClassRoomComponent_mat_option_28_Template, 2, 2, \"mat-option\", 9);\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(29, \"div\", 10)(30, \"button\", 11);\n      i0.ɵɵtext(31, \" Register Classroom \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"button\", 12);\n      i0.ɵɵtext(33, \" Cancel \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(34, \"p\", 13);\n      i0.ɵɵtext(35, \"Fields with * are Required\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(36, \"div\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(17);\n      i0.ɵɵproperty(\"ngForOf\", ctx.counter(10));\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngForOf\", ctx.divitions);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.RouterLink, i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.NgForm, i5.MatFormField, i5.MatLabel, i6.MatSelect, i7.MatOption],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;;;;;IAiBgCA,sCAA8F;IAApCA;MAAA;MAAA;MAAA;MAAA,OAAqBA,sCAAa;IAAA,EAAC;IACzFA,YACJ;IAAAA,iBAAa;;;;IAF+BA,8BAAa;IACrDA,eACJ;IADIA,uCACJ;;;;;;IAkBAA,sCAA8G;IAA5CA;MAAA;MAAA;MAAA;MAAA,OAAqBA,8CAAqB;IAAA,EAAC;IACzGA,YACJ;IAAAA,iBAAa;;;;IAFkCA,mCAAkB;IAC7DA,eACJ;IADIA,4CACJ;;;AC9BhC,OAAM,MAAOC,qBAAqB;EAWhCC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAVxB,YAAO,GAAG,6BAA6B;IACvC,cAAS,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAG,GAAG,EAAE,GAAG,EAAE,GAAG,EAC9D,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAQpC;EAEtCC,QAAQ;IACN,IAAI,CAACC,YAAY,EAAE;EACrB;EAEAA,YAAY;IACV,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,IAAI,CAACC,OAAO,GAAG,YAAY,CAAC,CAACC,SAAS,CAAC;MACnDC,IAAI,EAAGC,QAAQ,IAAG;QAChB,IAAI,CAACC,UAAU,GAAGD,QAAQ;MAC5B,CAAC;MACDE,KAAK,EAAE,MAAMC,OAAO,CAACC,GAAG,CAACD,OAAO,CAACD,KAAK,EAAE,CAAC;MACzCG,QAAQ,EAAE,MAAMF,OAAO,CAACC,GAAG,CAAC,2BAA2B;KACxD,CAAC;EACJ;EAEAE,QAAQ;IACN,IAAI,CAACb,IAAI,CAACc,IAAI,CAAY,IAAI,CAACV,OAAO,GAAG,qBAAqB,EAAG,IAAI,CAACW,SAAS,CAAC,CAACV,SAAS,CAAC,EAAE,CAAC;EAChG;EAEAW,OAAO,CAACC,CAAS;IACf,OAAO,IAAIC,KAAK,CAACD,CAAC,CAAC;EACrB;EAEAE,QAAQ,CAACC,KAAc;IACrB,IAAI,CAACA,KAAK,GAACA,KAAK;EAClB;EAEAC,WAAW,CAACC,QAAiB;IAC3B,IAAI,CAACA,QAAQ,GAACA,QAAQ;EACxB;;AAzCWxB,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAyB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDTlC9B,8BAA4D;MAEvBA;QAAA,OAAY+B,cAAU;MAAA,EAAC;MAChD/B,6BAAmD;MAACA,iCAAgB;MAAAA,iBAAK;MACzEA,qBAAI;MAEJA,8BAAiB;MAGLA,gCACJ;MAAAA,iBAAM;MAEVA,+BAAoB;MAGGA,6BAAY;MAAAA,iBAAY;MACnCA,mCAAY;MACRA,sFAEa;MACjBA,iBAAa;MAM7BA,+BAAiB;MAGLA,mCACJ;MAAAA,iBAAM;MAEVA,+BAAoB;MAGGA,sCAAqB;MAAAA,iBAAY;MAC5CA,mCAAY;MACRA,sFAEa;MACjBA,iBAAa;MAM7BA,gCAA8D;MACqBA,qCAAmB;MAAAA,iBAAS;MAC3GA,mCAA4E;MAACA,yBAAO;MAAAA,iBAAS;MAGjGA,8BAAuB;MAAAA,2CAA0B;MAAAA,iBAAI;MACrDA,uBAAW;MACfA,iBAAO;;;MApC6CA,gBAAc;MAAdA,yCAAc;MAoBTA,gBAAY;MAAZA,uCAAY","names":["i0","RegClassRoomComponent","constructor","http","ngOnInit","getClassroom","get","baseurl","subscribe","next","response","classRooms","error","console","log","complete","register","post","classRoom","counter","i","Array","setGrade","grade","setDivition","divition","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\DotNetProjects\\ClassroomManagemnt\\client\\src\\app\\reg-class-room\\reg-class-room.component.html","C:\\DotNetProjects\\ClassroomManagemnt\\client\\src\\app\\reg-class-room\\reg-class-room.component.ts"],"sourcesContent":["<div class=\"container\" style=\"margin: 35px 35px 35px 35px;\">\n    <div class=\"container\" style=\"margin: 35px 35px 35px 35px;\">\n        <form #registerForm=\"ngForm\" (ngSubmit)=\"register()\" autocomplete=\"off\">\n            <h2 style=\"font-weight: bold; text-align: center;\"> Register Student</h2>\n            <hr>\n            \n            <div class=\"row\">\n                <div class=\"col-2\">\n                    <div style=\"margin-top: 10px;\">\n                        Class Grade *\n                    </div>\n                </div>\n                <div class=\"col-10\">\n                    <div class=\"row\">\n                        <mat-form-field appearance=\"fill\">\n                            <mat-label>Select Grade</mat-label>\n                            <mat-select>\n                                <mat-option *ngFor=\"let num of counter(10)\" [value]=\"num\" (onSelectionChange)=\"setGrade(num)\">\n                                    {{num}}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"col-2\">\n                    <div style=\"margin-top: 10px;\">\n                        Class Divition *\n                    </div>\n                </div>\n                <div class=\"col-10\">\n                    <div class=\"row\">\n                        <mat-form-field appearance=\"fill\">\n                            <mat-label>Select Class Divition</mat-label>\n                            <mat-select>\n                                <mat-option *ngFor=\"let divition of divitions\" [value]=\"divition\" (onSelectionChange)=\"setDivition(divition)\">\n                                    {{divition}}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                </div>\n            </div>\n        \n            <div class=\"text-center\" style=\"margin: 25px 25px 25px 25px;\">\n                <button class=\"btn btn-success me2\" type=\"Submit\" style=\"margin-right: 10px;\"> Register Classroom </button>\n                <button class=\"btn btn-secondary\" routerLink=\"/\" style=\"margin-left: 10px;\"> Cancel </button>\n            </div>\n            \n            <p style=\"color: red;\">Fields with * are Required</p>\n            <div></div>\n        </form>\n    </div>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { classRoom } from '../_models/entityModels';\n\n@Component({\n  selector: 'app-reg-class-room',\n  templateUrl: './reg-class-room.component.html',\n  styleUrls: ['./reg-class-room.component.css']\n})\nexport class RegClassRoomComponent implements OnInit {\n  baseurl = \"https://localhost:7217/api/\"\n  divitions = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\" , \"J\", \"K\", \"L\",\n            \"M\", \"N\", \"O\", \"P\", \"Q\", \"S\" ,\"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"]\n\n\n  classRoom : classRoom | any ;\n  grade : number | any;\n  divition : string | any;\n  classRooms : classRoom[] | any;\n\n  constructor(private http: HttpClient){}\n\n  ngOnInit(): void {\n    this.getClassroom();\n  }\n\n  getClassroom(){\n    this.http.get(this.baseurl + 'classRoom/').subscribe({\n      next : response => {\n        this.classRooms = response;\n      },\n      error: () => console.log(console.error()),\n      complete: () => console.log('Requse has Been Completed')\n    })\n  }\n\n  register(){\n    this.http.post<classRoom>(this.baseurl + \"classRoom/register/\" , this.classRoom).subscribe({})\n  }\n\n  counter(i: number) {\n    return new Array(i);\n  }\n\n  setGrade(grade : number){\n    this.grade=grade;\n  }\n\n  setDivition(divition : string){\n    this.divition=divition;\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}