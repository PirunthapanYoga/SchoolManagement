{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/form-field\";\nimport * as i4 from \"@angular/material/select\";\nimport * as i5 from \"@angular/material/core\";\nfunction AllocateClassroomComponent_div_0_mat_option_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-option\", 15);\n    i0.ɵɵlistener(\"onSelectionChange\", function AllocateClassroomComponent_div_0_mat_option_17_Template_mat_option_onSelectionChange_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const teacher_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r4.setTeacher(teacher_r3));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const teacher_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", teacher_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", teacher_r3.firstName + \" \" + teacher_r3.lastName, \" \");\n  }\n}\nfunction AllocateClassroomComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"div\", 3)(2, \"div\", 4)(3, \"h2\", 5);\n    i0.ɵɵtext(4, \"Teacher Details\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(5, \"div\", 3)(6, \"div\", 6)(7, \"div\", 7)(8, \"div\", 8)(9, \"label\", 9);\n    i0.ɵɵtext(10, \"Full Name\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"div\", 10)(12, \"div\", 11)(13, \"mat-form-field\", 12)(14, \"mat-label\");\n    i0.ɵɵtext(15, \"Select Student \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"mat-select\", 13);\n    i0.ɵɵlistener(\"valueChange\", function AllocateClassroomComponent_div_0_Template_mat_select_valueChange_16_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.selectedTeacher = $event);\n    });\n    i0.ɵɵtemplate(17, AllocateClassroomComponent_div_0_mat_option_17_Template, 2, 2, \"mat-option\", 14);\n    i0.ɵɵelementEnd()()()()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(16);\n    i0.ɵɵproperty(\"value\", ctx_r0.selectedTeacher);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.teachers);\n  }\n}\nfunction AllocateClassroomComponent_div_1_mat_option_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-option\", 15);\n    i0.ɵɵlistener(\"onSelectionChange\", function AllocateClassroomComponent_div_1_mat_option_18_Template_mat_option_onSelectionChange_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const classRoom_r11 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r12.setClassroom(classRoom_r11));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const classRoom_r11 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", classRoom_r11);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", classRoom_r11.name, \" \");\n  }\n}\nfunction AllocateClassroomComponent_div_1_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 7)(2, \"div\", 6)(3, \"div\", 23)(4, \"div\", 24)(5, \"label\", 25);\n    i0.ɵɵtext(6, \"Classrooms\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 26)(8, \"label\", 25);\n    i0.ɵɵtext(9, \"Action\");\n    i0.ɵɵelementEnd()()()()()();\n  }\n}\nfunction AllocateClassroomComponent_div_1_div_25_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"div\", 6)(2, \"div\", 23)(3, \"div\", 24)(4, \"div\", 28);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 29)(7, \"div\", 30);\n    i0.ɵɵtext(8, \"Deallocate \");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const rooms_r15 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", rooms_r15.name, \" \");\n  }\n}\nfunction AllocateClassroomComponent_div_1_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, AllocateClassroomComponent_div_1_div_25_div_1_Template, 9, 1, \"div\", 27);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r10.selectedTeacher.classRooms);\n  }\n}\nfunction AllocateClassroomComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 16)(1, \"div\", 3)(2, \"div\", 4)(3, \"h2\", 5);\n    i0.ɵɵtext(4, \"Allocate Classroom\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(5, \"div\", 3)(6, \"div\", 7)(7, \"div\", 6)(8, \"div\", 7)(9, \"div\", 8)(10, \"label\", 17);\n    i0.ɵɵtext(11, \"Classroom Name\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"div\", 10)(13, \"div\", 18)(14, \"mat-form-field\", 12)(15, \"mat-label\");\n    i0.ɵɵtext(16, \"Select Classroom \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"mat-select\", 13);\n    i0.ɵɵlistener(\"valueChange\", function AllocateClassroomComponent_div_1_Template_mat_select_valueChange_17_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.selectedClassRoom = $event);\n    });\n    i0.ɵɵtemplate(18, AllocateClassroomComponent_div_1_mat_option_18_Template, 2, 2, \"mat-option\", 14);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelement(19, \"div\", 19);\n    i0.ɵɵelementStart(20, \"div\", 8)(21, \"div\", 20)(22, \"div\", 21);\n    i0.ɵɵtext(23, \"Allocate\");\n    i0.ɵɵelementEnd()()()()()();\n    i0.ɵɵtemplate(24, AllocateClassroomComponent_div_1_div_24_Template, 10, 0, \"div\", 22);\n    i0.ɵɵtemplate(25, AllocateClassroomComponent_div_1_div_25_Template, 2, 1, \"div\", 22);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(17);\n    i0.ɵɵproperty(\"value\", ctx_r1.selectedClassRoom);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.classRooms);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.selectedTeacher);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.selectedTeacher);\n  }\n}\nexport class AllocateClassroomComponent {\n  constructor(http) {\n    this.http = http;\n    this.baseurl = \"https://localhost:7217/api/\";\n    this.teachers = {};\n    this.classRooms = {};\n    this.isLoaded = false;\n  }\n  ngOnInit() {\n    this.getTeacher();\n  }\n  getTeacher() {\n    this.http.get(this.baseurl + 'teacher/classAllocation/').subscribe({\n      next: response => {\n        this.teachers = response;\n        this.getClassroom();\n      },\n      error: () => console.log(console.error())\n    });\n  }\n  getClassroom() {\n    this.http.get(this.baseurl + 'classRoom/basicDetails/').subscribe({\n      next: response => {\n        this.classRooms = response;\n        this.isLoaded = true;\n      },\n      error: () => console.log(console.error())\n    });\n  }\n  printVal() {\n    console.log(this.selectedTeacher);\n    console.log(this.selectedClassRoom);\n  }\n  setTeacher(teacher) {\n    this.selectedTeacher = teacher;\n    this.printVal();\n  }\n  setClassroom(classRoom) {\n    this.selectedClassRoom = classRoom;\n    this.printVal();\n  }\n}\nAllocateClassroomComponent.ɵfac = function AllocateClassroomComponent_Factory(t) {\n  return new (t || AllocateClassroomComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nAllocateClassroomComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AllocateClassroomComponent,\n  selectors: [[\"app-allocate-classroom\"]],\n  decls: 2,\n  vars: 2,\n  consts: [[\"class\", \"container-fluid\", \"style\", \"border: 3px solid black; border-radius: 10px;\", 4, \"ngIf\"], [\"class\", \"container-fluid\", \"style\", \"border: 3px solid black; border-radius: 10px; margin-top: 35px;\", 4, \"ngIf\"], [1, \"container-fluid\", 2, \"border\", \"3px solid black\", \"border-radius\", \"10px\"], [1, \"container-fluid\", 2, \"margin\", \"35px 35px 35px 35px\"], [2, \"text-align\", \"lest\"], [2, \"font-weight\", \"bold\"], [1, \"col-10\"], [1, \"row\"], [1, \"col-2\"], [\"for\", \"Student\", 2, \"font-size\", \"medium\", \"margin-top\", \"30px\"], [1, \"col-6\"], [1, \"row\", 2, \"margin-top\", \"10px\"], [\"appearance\", \"fill\"], [3, \"value\", \"valueChange\"], [3, \"value\", \"onSelectionChange\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\", \"onSelectionChange\"], [1, \"container-fluid\", 2, \"border\", \"3px solid black\", \"border-radius\", \"10px\", \"margin-top\", \"35px\"], [\"for\", \"Student\", 2, \"font-size\", \"medium\", \"margin-top\", \"40px\"], [1, \"row\", 2, \"margin-top\", \"20px\"], [1, \"col-1\"], [1, \"container\", 2, \"margin-top\", \"30px\"], [1, \"btn\", \"me-2\", 2, \"background-color\", \"dimgrey\"], [4, \"ngIf\"], [1, \"row\", 2, \"border\", \"1px solid black\"], [1, \"col-9\", 2, \"border-right\", \"1px solid black\"], [\"for\", \"classRoom\", 2, \"font-weight\", \"bold\", \"margin\", \"15px 0px 15px 0px\"], [1, \"col-3\", 2, \"text-align\", \"center\"], [\"class\", \"row\", 4, \"ngFor\", \"ngForOf\"], [2, \"margin\", \"15px 0px 15px 15px\"], [1, \"col-3\", 2, \"justify-items\", \"center\"], [1, \"btn\", \"me-2\", 2, \"background-color\", \"dimgrey\", \"margin\", \"5px 0px 5px 0px\"]],\n  template: function AllocateClassroomComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, AllocateClassroomComponent_div_0_Template, 18, 2, \"div\", 0);\n      i0.ɵɵtemplate(1, AllocateClassroomComponent_div_1_Template, 26, 4, \"div\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.isLoaded);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isLoaded);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.MatFormField, i3.MatLabel, i4.MatSelect, i5.MatOption],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","AllocateClassroomComponent","constructor","http","ngOnInit","getTeacher","get","baseurl","subscribe","next","response","teachers","getClassroom","error","console","log","classRooms","isLoaded","printVal","selectedTeacher","selectedClassRoom","setTeacher","teacher","setClassroom","classRoom","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\DotNetProjects\\ClassroomManagemnt\\client\\src\\app\\allocate-classroom\\allocate-classroom.component.html","C:\\DotNetProjects\\ClassroomManagemnt\\client\\src\\app\\allocate-classroom\\allocate-classroom.component.ts"],"sourcesContent":["<div class=\"container-fluid\" style=\"border: 3px solid black; border-radius: 10px;\" *ngIf=\"isLoaded\">\n\n    <div class=\"container-fluid\" style=\"margin:  35px 35px 35px 35px;\">\n        <div style=\"text-align: lest; \">\n            <h2 style=\"font-weight: bold;\">Teacher Details</h2>\n        </div>\n    </div>\n\n    <div class=\"container-fluid\" style=\"margin:  35px 35px 35px 35px;\">\n        <div class=\"col-10\">\n            <div class=\"row\">\n\n                <div class=\"col-2\">\n                    <label for=\"Student\" style=\"font-size: medium; margin-top: 30px;\">Full Name</label>\n                </div>\n    \n                <div class=\"col-6\">\n                    <div class=\"row\" style=\"margin-top: 10px;\">\n                        <mat-form-field appearance=\"fill\">\n                            <mat-label>Select Student </mat-label>\n                            <mat-select [(value)]=\"selectedTeacher\">\n                                <mat-option *ngFor=\"let teacher of teachers\" [value]=\"teacher\"\n                                    (onSelectionChange)=\"setTeacher(teacher)\">\n                                    {{teacher.firstName + \" \" + teacher.lastName}}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                </div>\n    \n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"container-fluid\" style=\"border: 3px solid black; border-radius: 10px; margin-top: 35px;\" *ngIf=\"isLoaded\">\n\n    <div class=\"container-fluid\" style=\"margin:  35px 35px 35px 35px;\">\n        <div style=\"text-align: lest; \">\n            <h2 style=\"font-weight: bold;\">Allocate Classroom</h2>\n        </div>\n    </div>\n\n    <div class=\"container-fluid\" style=\"margin:  35px 35px 35px 35px;\">\n\n        <div class=\"row\" >\n            <div class=\"col-10\">\n                <div class=\"row\">\n\n                    <div class=\"col-2\">\n                        <label for=\"Student\" style=\"font-size: medium; margin-top: 40px;\">Classroom Name</label>\n                    </div>\n        \n                    <div class=\"col-6\">\n                        <div class=\"row\" style=\"margin-top: 20px;\">\n                            <mat-form-field appearance=\"fill\">\n                                <mat-label>Select Classroom </mat-label>\n                                <mat-select [(value)]=\"selectedClassRoom\">\n                                    <mat-option *ngFor=\"let classRoom of classRooms\" [value]=\"classRoom\"\n                                        (onSelectionChange)=\"setClassroom(classRoom)\">\n                                        {{classRoom.name}}\n                                    </mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"col-1\"></div>\n        \n                    <div class=\"col-2\">\n                        <div class=\"container\" style=\"margin-top: 30px;\">\n                            <div class=\"btn me-2\" style=\"background-color:dimgrey;\">Allocate</div>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n        \n        <div *ngIf=\"selectedTeacher\" >\n            <div class=\"row\">\n                <div class=\"col-10\">\n                    <div class=\"row\" style=\"border: 1px solid black;\">\n\n                        <div class=\"col-9\" style=\"border-right: 1px solid black;\">\n                            <label for=\"classRoom\" style=\"font-weight: bold; margin:15px 0px 15px 0px\">Classrooms</label>\n                        </div>\n\n                        <div class=\"col-3\" style=\"text-align: center;\">\n                            <label for=\"classRoom\" style=\"font-weight: bold; margin:15px 0px 15px 0px\">Action</label>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div *ngIf=\"selectedTeacher\">\n\n            <div class=\"row\" *ngFor=\"let rooms of selectedTeacher.classRooms\">\n                <div class=\"col-10\">\n                    <div class=\"row\" style=\"border: 1px solid black;\">\n\n                        <div class=\"col-9\" style=\"border-right: 1px solid black;\">\n                            <div style=\"margin:15px 0px 15px 15px\">\n                                {{rooms.name}}\n                            </div>\n                        </div>\n\n                        <div class=\"col-3\" style=\"justify-items: center;\">\n                            <div class=\"btn me-2\" style=\"background-color:dimgrey; margin:5px 0px 5px 0px\">Deallocate\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n\n        </div>\n\n    </div>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { classRoom, teacher } from '../_models/entityModels';\n\n@Component({\n  selector: 'app-allocate-classroom',\n  templateUrl: './allocate-classroom.component.html',\n  styleUrls: ['./allocate-classroom.component.css']\n})\nexport class AllocateClassroomComponent implements OnInit {\n  baseurl = \"https://localhost:7217/api/\"\n  teachers : teacher[] | any ={}\n  classRooms: classRoom[] | any = {};\n  selectedTeacher : teacher | any;\n  selectedClassRoom : classRoom | any;\n  \n  isLoaded = false;\n  \n  constructor (private http: HttpClient) {}\n  \n  ngOnInit(): void {\n    this.getTeacher();\n  }\n\n  getTeacher(){\n    this.http.get(this.baseurl + 'teacher/classAllocation/').subscribe({\n      next : response => {\n        this.teachers = response;\n        this.getClassroom()\n      },\n      error: () => console.log(console.error()),\n    })\n  }\n\n  getClassroom(){\n    this.http.get(this.baseurl + 'classRoom/basicDetails/').subscribe({\n      next : response => {\n        this.classRooms = response;\n        this.isLoaded=true;\n      },\n      error: () => console.log(console.error()),\n    })\n  }\n\n  \n  printVal(){\n      console.log(this.selectedTeacher);\n      console.log(this.selectedClassRoom);\n  }\n\n  setTeacher(teacher : teacher){\n    this.selectedTeacher=teacher;\n    this.printVal();\n  }\n\n  setClassroom(classRoom : classRoom){\n    this.selectedClassRoom=classRoom;\n    this.printVal();\n  }\n\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}